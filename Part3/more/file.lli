@.strP = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
define void @println(i32 %x) {
%1 = alloca i32, align 4
store i32 %x, i32* %1, align 4
%2 = load i32, i32* %1, align 4
%3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.strP, i32 0, i32 0), i32 %2)
ret void
}
declare i32 @printf(i8*, ...)

@.strR = private unnamed_addr constant [3 x i8] c"%d\00", align 1
define i32 @readInt() {
%x = alloca i32, align 4
%1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.strR, i32 0, i32 0), i32* %x)
%2 = load i32, i32* %x, align 4
ret i32 %2
}
declare i32 @__isoc99_scanf(i8*, ...)
define i32 @main() {
entry:
%0 = add i32 1,2
%1 = add i32 %0,3
%2 = add i32 %1,4
%3 = add i32 %2,5
%a = add i32 0,%3
%4 = mul i32 1,2
%5 = mul i32 %4,3
%6 = mul i32 %5,4
%7 = mul i32 %6,5
%8 = mul i32 %7,6
%9 = mul i32 %8,7
%10 = mul i32 %9,8
%11 = mul i32 %10,9
%12 = mul i32 %11,10
%b = add i32 0,%12
call void @println(i32 %a)
call void @println(i32 %b)
ret i32 0
}
